name: Cross build

on:
  push:
  workflow_dispatch:

jobs:
  cross-python:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    name: Cross Python (Python ${{ matrix.python-version }})

    steps:
      - uses: actions/checkout@v4
      - name: Cache Python
        uses: actions/cache@v4
        id: cache
        with:
          path: staging/python${{ matrix.python-version }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('build-python.sh') }}
      - name: Install cross-compiler
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu ninja-build
      - name: Install native Python
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install cross Python
        if: steps.cache.outputs.cache-hit != 'true'
        run: bash build-python.sh ${{ matrix.python-version }}
      - name: Tar cross Python
        run: tar czf staging.tar.gz staging
      - name: Upload cross Python
        uses: actions/upload-artifact@v4
        with:
          name: cross-python-${{ matrix.python-version }}
          path: staging.tar.gz
  
  cross:
    needs: [cross-python]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    name: Cross pybind11 (Python ${{ matrix.python-version }})

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install cross-compiler
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu ninja-build
      - name: Download cross Python
        uses: actions/download-artifact@v4
        with:
          name: cross-python-${{ matrix.python-version }}
      - name: Extract cross Python
        run: tar xzf staging.tar.gz
      - name: Install pybind11
        run: bash build-pybind11.sh
      - name: Configure
        if: ${{ matrix.python-version == '3.6' || matrix.python-version == '3.7' }}
        run: >
          cmake -S . -B build -G Ninja
          -D CMAKE_TOOLCHAIN_FILE="$PWD/toolchain.cmake"
          -D CMAKE_FIND_ROOT_PATH="$PWD/staging/pybind11;$PWD/staging/python${{ matrix.python-version }}"
          -D Python_ROOT_DIR="$PWD/staging/python${{ matrix.python-version }}/usr/local"
          -D Python_FIND_ABI="ANY;ANY;ANY"
      - name: Configure
        if: ${{ matrix.python-version != '3.6' && matrix.python-version != '3.7' }}
        run: >
          cmake -S . -B build -G Ninja
          -D CMAKE_TOOLCHAIN_FILE="$PWD/toolchain.cmake"
          -D CMAKE_FIND_ROOT_PATH="$PWD/staging/pybind11;$PWD/staging/python${{ matrix.python-version }}"
          -D Python_ROOT_DIR="$PWD/staging/python${{ matrix.python-version }}/usr/local"
      - name: Build
        run: >
          cmake --build build --verbose

  cross-windows:
    runs-on: windows-2022
    strategy:
      matrix:
        python-version: ['3.9.10', '3.10.11', '3.11.8', '3.12.2']
        include:
          - python-version: '3.9.10'
            ext-suffix: .cp39-win_arm64.pyd
          - python-version: '3.10.11'
            ext-suffix: .cp310-win_arm64.pyd
          - python-version: '3.11.8'
            ext-suffix: .cp311-win_arm64.pyd
          - python-version: '3.12.2'
            ext-suffix: .cp312-win_arm64.pyd
    name: Cross pybind11 Windows (Python ${{ matrix.python-version }})

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download cross Python
        run: >
          nuget install pythonarm64
          -Version ${{ matrix.python-version }}
          -FallbackSource https://api.nuget.org/v3/index.json
          -OutputDirectory "$(pwd)/staging/"
      - name: Check cross Python
        run: ls staging/pythonarm64.${{ matrix.python-version }} && ls staging/pythonarm64.${{ matrix.python-version }}/tools
      - name: Install pybind11
        run: ./build-pybind11.ps1
      - name: Configure
        run: >
          cmake -S . -B build
          -D CMAKE_TOOLCHAIN_FILE="$(pwd)/toolchain-win.cmake"
          -D CMAKE_FIND_ROOT_PATH="$(pwd)/staging/pybind11;$(pwd)/staging/pythonarm64.${{ matrix.python-version }}"
          -D Python_ROOT_DIR="$(pwd)/staging/pythonarm64.${{ matrix.python-version }}/tools"
          -D pybind11_DIR="$(pwd)/staging/pybind11/share/cmake/pybind11"
        env:
          SETUPTOOLS_EXT_SUFFIX: ${{ matrix.ext-suffix }}
      - name: Build
        run: >
          cmake --build build --verbose
  
  cross-macos:
    runs-on: macos-11
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        macos-version: ['11']
        include:
          - python-version: '3.8'
            full-python-version: '3.8.10'
            macos-version: 'x10.9'
          - python-version: '3.9'
            full-python-version: '3.9.13'
          - python-version: '3.10'
            full-python-version: '3.10.11'
          - python-version: '3.11'
            full-python-version: '3.11.8'
          - python-version: '3.12'
            full-python-version: '3.12.2'
    name: Cross pybind11 macOS (Python ${{ matrix.python-version }})

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download cross Python
        run: |
          wget https://www.python.org/ftp/python/${{ matrix.full-python-version }}/python-${{ matrix.full-python-version }}-macos${{ matrix.macos-version }}.pkg -O /tmp/Python.pkg
          sudo installer -pkg /tmp/Python.pkg -target /
      - name: Check cross Python
        run: ls "/Library/Frameworks/Python.framework/Versions/${{ matrix.python-version }}"
      - name: Install pybind11
        run: bash ./build-pybind11.mac.sh
      - name: Configure
        run: >
          cmake -S . -B build
          -D CMAKE_TOOLCHAIN_FILE="$PWD/toolchain-mac.cmake"
          -D CMAKE_FIND_ROOT_PATH="$PWD/staging/pybind11;/Library/Frameworks/Python.framework/Versions/${{ matrix.python-version }}"
          -D Python_ROOT_DIR="/Library/Frameworks/Python.framework/Versions/${{ matrix.python-version }}"
      - name: Build
        run: >
          cmake --build build --verbose
  